# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.10
#
# <auto-generated>
#
# Generated from file `bulbulator.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module Bulbulator
_M_Bulbulator = Ice.openModule('Bulbulator')
__name__ = 'Bulbulator'

_M_Bulbulator.Bulbs = "bul bul bul"

_M_Bulbulator._t_Bulb = IcePy.defineValue('::Bulbulator::Bulb', Ice.Value, -1, (), False, True, None, ())

if 'BulbPrx' not in _M_Bulbulator.__dict__:
    _M_Bulbulator.BulbPrx = Ice.createTempClass()
    class BulbPrx(Ice.ObjectPrx):

        def check(self, context=None):
            return _M_Bulbulator.Bulb._op_check.invoke(self, ((), context))

        def checkAsync(self, context=None):
            return _M_Bulbulator.Bulb._op_check.invokeAsync(self, ((), context))

        def begin_check(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_Bulbulator.Bulb._op_check.begin(self, ((), _response, _ex, _sent, context))

        def end_check(self, _r):
            return _M_Bulbulator.Bulb._op_check.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_Bulbulator.BulbPrx.ice_checkedCast(proxy, '::Bulbulator::Bulb', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_Bulbulator.BulbPrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::Bulbulator::Bulb'
    _M_Bulbulator._t_BulbPrx = IcePy.defineProxy('::Bulbulator::Bulb', BulbPrx)

    _M_Bulbulator.BulbPrx = BulbPrx
    del BulbPrx

    _M_Bulbulator.Bulb = Ice.createTempClass()
    class Bulb(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Bulbulator::Bulb', '::Ice::Object')

        def ice_id(self, current=None):
            return '::Bulbulator::Bulb'

        @staticmethod
        def ice_staticId():
            return '::Bulbulator::Bulb'

        def check(self, current=None):
            raise NotImplementedError("servant method 'check' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_Bulbulator._t_BulbDisp)

        __repr__ = __str__

    _M_Bulbulator._t_BulbDisp = IcePy.defineClass('::Bulbulator::Bulb', Bulb, (), None, ())
    Bulb._ice_type = _M_Bulbulator._t_BulbDisp

    Bulb._op_check = IcePy.Operation('check', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), IcePy._t_string, False, 0), ())

    _M_Bulbulator.Bulb = Bulb
    del Bulb

# End of module Bulbulator
